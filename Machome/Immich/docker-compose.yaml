name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}  # Использует версию из переменной IMMICH_VERSION или 'release' по умолчанию
    volumes:
      - ${UPLOAD_LOCATION}:/data  # Монтирование директории для загрузки фотографий
      - /etc/localtime:/etc/localtime:ro  # Синхронизация времени с хост-системой
    ports:
      - '2283:2283'  # Порт для веб-интерфейса
    depends_on:
      - redis
      - database
    restart: always
    healthcheck:
      disable: false
    networks:
      - default
      - ${USER_NET}  # Сеть для reverse proxy

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}  # ML-сервер для обработки фото
    volumes:
      - model-cache:/cache  # Кэш для ML-моделей
    restart: always
    healthcheck:
      disable: false
    networks:
      - default
      - ${USER_NET}

  redis:
    container_name: immich_redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:facc1d2c3462975c34e10fccb167bfa92b0e0dbd992fc282c29a61c3243afb11  # Redis для кэширования
    healthcheck:
      test: redis-cli ping || exit 1  # Проверка работоспособности Redis
    restart: always
    networks:
      - default

  database:
    container_name: immich_postgres
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a  # PostgreSQL с поддержкой векторного поиска
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}  # Пароль базы данных из .env
      POSTGRES_USER: ${DB_USERNAME}  # Пользователь базы данных из .env
      POSTGRES_DB: ${DB_DATABASE_NAME}  # Имя базы данных из .env
      POSTGRES_INITDB_ARGS: '--data-checksums'  # Включение проверки целостности данных
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data  # Место хранения данных PostgreSQL
    shm_size: 128mb  # Размер разделяемой памяти для PostgreSQL
    restart: always
    networks:
      - default

volumes:
  model-cache:  # Том для хранения ML-моделей
  immich-db-data:  # Том для данных базы данных

networks:
  default:
    driver: bridge  # Стандартная сеть Docker
  ${USER_NET}:
    external: true  # Внешняя сеть для reverse proxy
